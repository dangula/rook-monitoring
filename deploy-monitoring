#!/usr/bin/env bash

if [ -z "${KUBECONFIG}" ]; then
    export KUBECONFIG=~/.kube/config
fi

if [ -z "${NAMESPACE}" ]; then
    NAMESPACE=monitoring
fi

if [ -z "${ROOK_NAMESPACE}" ]; then
    ROOK_NAMESPACE=longhaul-ns
fi

kubectl create namespace "$NAMESPACE"

kubectl -n monitoring() {
    kubectl --namespace "$NAMESPACE" "$@"vim
}

kubectl crate -f manifests/rook

kubectl -n monitoring apply -f manifests/prometheus-operator

# Wait for CRDs to be ready.
printf "Waiting for Operator to register custom resource definitions..."
until kubectl -n monitoring get customresourcedefinitions servicemonitors.monitoring.coreos.com > /dev/null 2>&1; do sleep 1; printf "."; done
until kubectl -n monitoring get customresourcedefinitions prometheuses.monitoring.coreos.com > /dev/null 2>&1; do sleep 1; printf "."; done
until kubectl -n monitoring get customresourcedefinitions alertmanagers.monitoring.coreos.com > /dev/null 2>&1; do sleep 1; printf "."; done
until kubectl -n monitoring get servicemonitors.monitoring.coreos.com > /dev/null 2>&1; do sleep 1; printf "."; done
until kubectl -n monitoring get prometheuses.monitoring.coreos.com > /dev/null 2>&1; do sleep 1; printf "."; done
until kubectl -n monitoring get alertmanagers.monitoring.coreos.com > /dev/null 2>&1; do sleep 1; printf "."; done
echo "done!"

kubectl -n monitoring apply -f manifests/node-exporter
kubectl -n monitoring apply -f manifests/kube-state-metrics
kubectl -n monitoring apply -f manifests/grafana/grafana-credentials.yaml
kubectl -n monitoring apply -f manifests/grafana
sed 's#ROOK_NAMESPACE_HERE#'$ROOK_NAMESPACE'#' manifests/prometheus/prometheus-k8s-service-monitor-rook.yaml | kubectl --namespace "$NAMESPACE" apply -f -
find manifests/prometheus -type f ! -name prometheus-k8s-roles.yaml ! -name prometheus-k8s-role-bindings.yaml ! -name prometheus-k8s-service-monitor-rook.yaml -exec kubectl --namespace "$NAMESPACE" apply -f {} \;
sed 's#ROOK_NAMESPACE_HERE#'$ROOK_NAMESPACE'#' manifests/prometheus/prometheus-k8s-roles.yaml | kubectl apply -f -
sed 's#ROOK_NAMESPACE_HERE#'$ROOK_NAMESPACE'#' manifests/prometheus/prometheus-k8s-role-bindings.yaml | kubectl apply -f -

printf "Waiting for cluster monitoring to be ready..."
until kubectl -n monitoring get pod prometheus-k8s-0 > /dev/null 2>&1; do sleep 1; printf "."; done
until kubectl -n monitoring get pod -l app=grafana > /dev/null 2>&1; do sleep 1; printf "."; done
echo "done!"

echo "Prometheus service is running"
echo "Grafana service is running"